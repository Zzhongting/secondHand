<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zt.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.zt.pojo.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="catelog_id" jdbcType="INTEGER" property="catelogId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="real_price" jdbcType="REAL" property="realPrice" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="polish_time" jdbcType="VARCHAR" property="polishTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zt.pojo.Goods">
    <result column="describle" jdbcType="LONGVARCHAR" property="describle" />
  </resultMap>
  <sql id="Base_Column_List">
    id, catelog_id, user_id, name, price, real_price, start_time, polish_time, end_time, 
    status
  </sql>
  <sql id="Blob_Column_List">
    describle
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zt.pojo.Goods">
    insert into goods (id, catelog_id, user_id, 
      name, price, real_price, start_time, 
      polish_time, end_time, status, 
      describle)
    values (#{id,jdbcType=INTEGER}, #{catelogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{realPrice,jdbcType=REAL}, #{startTime,jdbcType=VARCHAR}, 
      #{polishTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{describle,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zt.pojo.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="catelogId != null">
        catelog_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="realPrice != null">
        real_price,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="polishTime != null">
        polish_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="describle != null">
        describle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="catelogId != null">
        #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="realPrice != null">
        #{realPrice,jdbcType=REAL},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="polishTime != null">
        #{polishTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="describle != null">
        #{describle,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zt.pojo.Goods">
    update goods
    <set>
      <if test="catelogId != null">
        catelog_id = #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="realPrice != null">
        real_price = #{realPrice,jdbcType=REAL},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="polishTime != null">
        polish_time = #{polishTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="describle != null">
        describle = #{describle,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zt.pojo.Goods">
    update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      describle = #{describle,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zt.pojo.Goods">
    update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByGoodsId" >
    update goods
    set status = 0 and end_time = #{0,jdbcType=VARCHAR}
    where id = #{1,jdbcType=INTEGER}
  </update>
  <select id="selectAllGoods" resultMap="ResultMapWithBLOBs">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List"/>
    from goods
  </select>
  <select id="selectOnlineGoods" resultMap="ResultMapWithBLOBs">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List"/>
    from goods
    where status = 1
    order by polish_time DESC
  </select>
  <select id="searchGoods" resultMap="ResultMapWithBLOBs" parameterType="String" >
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List"/>
    from goods
    where name like concat('%',#{0},'%') OR describle like concat('%',#{1},'%')
    and status = 1
  </select>
  <select id="getGoodsByUserId" resultMap="ResultMapWithBLOBs">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List"/>
    from goods
    where user_id = #{user_id,jdbcType=INTEGER} order by id desc;
  </select>
  <select id="selectByCatelogOrderByDate" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select <include refid="Base_Column_List" />,<include refid="Blob_Column_List"/>
    from goods
    where catelog_id = #{0,jdbcType=INTEGER} and status = 1
    order by polish_time DESC
    limit #{1,jdbcType=INTEGER}
  </select>
  <select id="selectByCatelog" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs" >
    select * from goods
    where catelog_id = #{catelog_id,jdbcType=INTEGER}
    order by polish_time DESC
  </select>
  </mapper>